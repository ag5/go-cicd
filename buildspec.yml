version: 0.2

//
// This codebuild file assumes the Codebuild is invoked with the following environment variables
//
// # The name of the ECR repository
// IMAGE_REPO_NAME=repository-name 
// # The GitHub repository as in [organization]/[repository]
// GITHUB_REPOSITORY=ag5/repository-name
//

phases:
  pre_build:
    commands:
      - printenv
      - ls -lha
      - echo "Login into aws container registry"
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - |
          if ! aws ecr describe-repositories --repository-names $IMAGE_REPO_NAME &> /dev/null; then
            echo "The ECR repository NAME does not exists. Please create it first in terraform"
            exit 1
          fi
          
      - echo "Setting up GitHub access"
      - go env -w GOPRIVATE=github.com/ag5/\*
      - git config --global url."git@github.com:".insteadOf "https://github.com/"
      - mkdir -p /root/.ssh
      - touch /root/.ssh/id_rsa
      - echo "$CI_SSH_KEY" > /root/.ssh/id_rsa
      - chmod 700 /root/.ssh && chmod 600 /root/.ssh/id_rsa

      - echo "Cloning and setting up the repository that we want to build"
      - git clone https://github.com/$GITHUB_REPOSITORY
      - cd $IMAGE_REPO_NAME
      - git checkout $GIT_TAG
      - cd ..
      - git clone https://github.com/ag5/go-cicd
      - mv go-cicd/notify.sh $IMAGE_REPO_NAME
      - chmod +x $IMAGE_REPO_NAME/notify.sh
      - mv go-cicd/buildspec.yml $IMAGE_REPO_NAME
      - mv go-cicd/Dockerfile $IMAGE_REPO_NAME
      - cd $IMAGE_REPO_NAME
      
      - echo "Download go dependencies"
      - go mod download
      - go mod vendor

      - echo "Start docker daemon"
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2375 --storage-driver=overlay&
      - timeout 15s sh -c "until docker info; do echo .; sleep 1; done"
      
  build:
    commands:
      - echo "Build the image and push it to the registry"
      - docker build -t $IMAGE_REPO_NAME:$GIT_TAG .
      - docker tag $IMAGE_REPO_NAME:$GIT_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$GIT_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$GIT_TAG
      
  post_build:
    commands:
      - echo "Send Slack notification if build step fails"
      - ./notify.sh
